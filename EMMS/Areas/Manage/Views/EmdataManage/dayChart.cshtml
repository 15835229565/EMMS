@{
    Layout = null;
}
@using EMMS.Models
@using EMMS.Areas.Manage.Models.ViewModel;
@using JQChart.Web.Mvc;
@model EmdataSearchModel

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>chart</title>
    <link href="/areas/manage/content/Reset.css" rel="stylesheet" />
    <link href="/areas/manage/content/List.css" rel="stylesheet" type="text/css" />
    <link href="/Areas/Manage/Content/Common.css" rel="stylesheet" />
    <link href="/Areas/Manage/Content/Validation.css" rel="stylesheet" />
    <link href="/Areas/Manage/Content/DataPicker/skin/WdatePicker.css" rel="stylesheet" />
    <link href="/Content/jquery.jqChart.css" rel="stylesheet" />
    <link href="/Content/jquery.jqRangeSlider.css" rel="stylesheet" />
    <link href="~/Content/themes/smoothness/jquery-ui-1.8.21.css" rel="stylesheet" />

    <script src="/Areas/Manage/Content/DataPicker/WdatePicker.js"></script>
    <script src="/Scripts/jquery-1.9.1.js"></script>
    <script src="/Scripts/jquery.validate.min.js"></script>
    <script src="/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="/Scripts/jquery.jqChart.min.js"></script>
    <script src="/Scripts/jquery.jqRangeSlider.min.js"></script>
    <style>
        body {
            text-align:center;
        }
        #list {
            margin:0;
            margin-top:10px;
            width:100%-20px;
        }
        #nav {
            height: auto;
            margin-bottom: 20px;
        }

            #nav ul {
                height: auto;
            }

                #nav ul li {
                    text-align:left;
                    padding: 5px;
                    float: left;
                    width: 250px;
                    height: 50px;
                }

                    #nav ul li input {
                        float: inherit;
                        line-height: 20px;
                        width:150px;
                    }

                    #nav ul li p {
                        float: left;
                    }

        .titleP {
            display:block;
            width: 100%-5px;
            font-size: 1.4em;
            background-color:#83b2bd;
            height:30px;
            line-height:30px;
            margin:5px 0;
            border:1px solid #ccc;
            text-align:center;
            color:black;
        }
            .titleP:hover {
                color:white;
                background-color:#079894;
            }
        .plot {
            width:560px;
            margin:0 auto;
        }
    </style>
</head>
<body>
    <div id="list" class="clear-fix">
        <div id="nav" class="clear-fix">
            @using (Html.BeginForm())
            {
                <ul>
                    <li>采集终端选择：
                    @Html.DropDownListFor(p => p.TerminalID, (IEnumerable<SelectListItem>)ViewBag.TerList)
                    </li>
                    <li>
                        <p>起始时间：</p>
                        @Html.EditorFor(p => p.StartTime)
                        <br />
                        @Html.ValidationMessageFor(p => p.StartTime)
                    </li>
                    <li>
                        <p>结束时间：</p>
                        @Html.EditorFor(p => p.EndTime)
                        <br />
                        @Html.ValidationMessageFor(p => p.EndTime)
                    </li>
                    <li style="width: 90px; height: 30px;">
                        <button type="submit" class="liButton" style="color: white; margin-left:5px;">提交</button>
                    </li>
                </ul>
            }
        </div>
        <script>
            $("#StartTime").toggleClass("Wdate").focus(function () { WdatePicker(); });
            $("#EndTime").toggleClass("Wdate").focus(function () { WdatePicker(); });
        </script>
        <p class="titleP" style="">最近一天均值：</p>
        <table id="data-list" style="font-size: 10px;">
            <tr>
                <th style="width: 60px;">采集终端</th>
                <th class="data">温度</th>
                <th class="data">湿度</th>
                <th class="data">PM2.5</th>
                <th class="data">亮度</th>
                <th class="data">紫外线强度</th>
                <th class="data">可燃气浓度</th>
                <th style="width: 80px;">数据上传时间</th>
            </tr>
            <tr>
                <td>@ViewBag.recentData.Terminal.TerminalName</td>
                <td>@ViewBag.recentData.Temperature.ToString("0.00")</td>
                <td>@ViewBag.recentData.Humidity.ToString("0.00")</td>
                <td>@ViewBag.recentData.Pm25</td>
                <td>@ViewBag.recentData.Luminance</td>
                <td>@ViewBag.recentData.UV</td>
                <td>@ViewBag.recentData.GasIntensity</td>
                <td>@ViewBag.recentData.Update.ToLocalTime().ToString()</td>
            </tr>
        </table>
    </div>

    <p class="titleP">温度日均值曲线图：</p>
    <div class="plot">
        <div id="temChart" style="width: 560px; height: 230px;">
            @(Html.JQChart()
                .Chart((IEnumerable<EMdata>)ViewBag.emData)
                .ID("Temperature")
                .Width(560)
                .Height(230)
                .Title("温度")
                .Legend(el =>el.Title("Legend"))
                .Border(border => border.StrokeStyle("#6ba851"))
                .Background(background => background.LinearGradient(0, 0, 0, 1).ColorStops(stop =>
                {
                    stop.Add(0, "#d2e6c9");
                    stop.Add(1, "white");
                }))
                .Tooltips(tooltips => tooltips.TooltipsType(TooltipsType.Shared))
                .Crosshairs(el => el.Enabled(true).VerticalLine(line => line.StrokeStyle("#cc0a0c")).HorizontalLine(false))
                .Animation(TimeSpan.FromSeconds(2))
                .Shadows(true)
                .Axes(axis =>
                    {
                        axis.DateTimeAxis(Location.Bottom)
                            .ZoomEnabled(true);
                    }
                )
                .Series(series =>
                    {
                        series.Line()
                              .Title("温度")
                              .XValues(el => el.Update)
                              .YValues(el => el.Temperature)
                              .Markers(false);
                    }
                )
                .Render() 
          )
        </div>
    </div>



    <p class="titleP">PM2.5日均值曲线图：</p>
    <div class="plot">
        <div id="pm25Chart" style="width: 560px; height: 230px;">
            @(Html.JQChart()
                .Chart((IEnumerable<EMdata>)ViewBag.emData)
                .ID("Pm25")
                .Width(560)
                .Height(230)
                .Title("PM2.5")
                .Legend(el =>el.Title("Legend"))
                .Border(border => border.StrokeStyle("#6ba851"))
                .Background(background => background.LinearGradient(0, 0, 0, 1).ColorStops(stop =>
                {
                    stop.Add(0, "#d2e6c9");
                    stop.Add(1, "white");
                }))
                .Tooltips(tooltips => tooltips.TooltipsType(TooltipsType.Shared))
                .Crosshairs(el => el.Enabled(true).VerticalLine(line => line.StrokeStyle("#cc0a0c")).HorizontalLine(false))
                .Animation(TimeSpan.FromSeconds(2))
                .Shadows(true)
                .Axes(axis =>
                    {
                        axis.DateTimeAxis(Location.Bottom)
                            .ZoomEnabled(true);
                    }
                )
                .Series(series =>
                    {
                        series.Line()
                              .Title("PM2.5")
                              .XValues(el => el.Update)
                              .YValues(el => el.Pm25)
                              .Markers(false);
                    }
                )
                .Render() 
          )
        </div>
    </div>

    <p class="titleP">湿度日均值曲线图：</p>
    <div class="plot">
        <div id="humiChart" style="width: 560px; height: 230px;">
           @(Html.JQChart()
                .Chart((IEnumerable<EMdata>)ViewBag.emData)
                .ID("Humidity")
                .Width(560)
                .Height(230)
                .Title("湿度")
                .Legend(el =>el.Title("Legend"))
                .Border(border => border.StrokeStyle("#6ba851"))
                .Background(background => background.LinearGradient(0, 0, 0, 1).ColorStops(stop =>
                {
                    stop.Add(0, "#d2e6c9");
                    stop.Add(1, "white");
                }))
                .Tooltips(tooltips => tooltips.TooltipsType(TooltipsType.Shared))
                .Crosshairs(el => el.Enabled(true).VerticalLine(line => line.StrokeStyle("#cc0a0c")).HorizontalLine(false))
                .Animation(TimeSpan.FromSeconds(2))
                .Shadows(true)
                .Axes(axis =>
                    {
                        axis.DateTimeAxis(Location.Bottom)
                            .ZoomEnabled(true);
                    }
                )
                .Series(series =>
                    {
                        series.Line()
                              .Title("湿度")
                              .XValues(el => el.Update)
                              .YValues(el => el.Humidity)
                              .Markers(false);
                    }
                )
                .Render() 
          )
        </div>
    </div>


    <p class="titleP">亮度日均值曲线图：</p>
    <div class="plot">
        <div id="luminChart" style="width: 560px; height: 230px;">
            @(Html.JQChart()
                .Chart((IEnumerable<EMdata>)ViewBag.emData)
                .ID("Luminance")
                .Width(560)
                .Height(230)
                .Title("亮度")
                .Legend(el =>el.Title("Legend"))
                .Border(border => border.StrokeStyle("#6ba851"))
                .Background(background => background.LinearGradient(0, 0, 0, 1).ColorStops(stop =>
                {
                    stop.Add(0, "#d2e6c9");
                    stop.Add(1, "white");
                }))
                .Tooltips(tooltips => tooltips.TooltipsType(TooltipsType.Shared))
                .Crosshairs(el => el.Enabled(true).VerticalLine(line => line.StrokeStyle("#cc0a0c")).HorizontalLine(false))
                .Animation(TimeSpan.FromSeconds(2))
                .Shadows(true)
                .Axes(axis =>
                    {
                        axis.DateTimeAxis(Location.Bottom)
                            .ZoomEnabled(true);
                    }
                )
                .Series(series =>
                    {
                        series.Line()
                              .Title("亮度")
                              .XValues(el => el.Update)
                              .YValues(el => el.Luminance)
                              .Markers(false);
                    }
                )
                .Render() 
          )
        </div>
    </div>


    <p class="titleP">紫外线强度日均值曲线图：</p>
    <div class="plot" >
        <div id="uvChart" style="width: 560px; height: 230px;">
             @(Html.JQChart()
                .Chart((IEnumerable<EMdata>)ViewBag.emData)
                .ID("UV")
                .Width(560)
                .Height(230)
                .Title("紫外线强度")
                .Legend(el =>el.Title("Legend"))
                .Border(border => border.StrokeStyle("#6ba851"))
                .Background(background => background.LinearGradient(0, 0, 0, 1).ColorStops(stop =>
                {
                    stop.Add(0, "#d2e6c9");
                    stop.Add(1, "white");
                }))
                .Tooltips(tooltips => tooltips.TooltipsType(TooltipsType.Shared))
                .Crosshairs(el => el.Enabled(true).VerticalLine(line => line.StrokeStyle("#cc0a0c")).HorizontalLine(false))
                .Animation(TimeSpan.FromSeconds(2))
                .Shadows(true)
                .Axes(axis =>
                    {
                        axis.DateTimeAxis(Location.Bottom)
                            .ZoomEnabled(true);
                    }
                )
                .Series(series =>
                    {
                        series.Line()
                              .Title("紫外线强度")
                              .XValues(el => el.Update)
                              .YValues(el => el.UV)
                              .Markers(false);
                    }
                )
                .Render() 
          )
        </div>
    </div>

    <script>
        function bindChartStyle(chartID) {
            $(chatID).bind('tooltipFormat', function (e, data) {

                var date = data.chart.stringFormat(data.x, "ddd, mmm dS, yyyy");

                var tooltip = '<b>' + date + '</b></br>' +
                      '<span style="color:' + data.series.fillStyle + '">' + data.series.title + ': </span>' +
                      '<b>' + data.y + '</b></br>';

                return tooltip;
            });
        }

        $(document).ready(function () {
            bindChartStyle("#Pm25");
            bindChartStyle("#Temperature");
            bindChartStyle("#Humidity");
            bindChartStyle("#Luminance");
            bindChartStyle("#UV");
        });
    </script>
</body>
</html>
